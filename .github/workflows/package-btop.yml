name: Package btop

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  build-deb:
    name: Build DEB (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: [self-hosted, ARM64]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fetch latest upstream release tag
        id: get_latest
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/aristocratos/btop/releases/latest | jq -r .tag_name)
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Check last built version
        id: check_version
        run: |
          if [ -f .last_built_btop_version ]; then
            last_built=$(cat .last_built_btop_version)
          else
            last_built="none"
          fi
          echo "last_built=$last_built" >> $GITHUB_OUTPUT
          if [ "$last_built" = "${{ steps.get_latest.outputs.latest_tag }}" ]; then
            echo "No new release. Exiting."
            exit 78
          fi

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev build-essential rpm gcc make cmake libncursesw5-dev pkg-config jq curl
          sudo gem install --no-document fpm

      - name: Download and extract btop source
        run: |
          curl -L "https://github.com/aristocratos/btop/archive/${{ steps.get_latest.outputs.latest_tag }}.tar.gz" -o btop.tar.gz
          tar -xzf btop.tar.gz
          mv btop-* btop

      - name: Build btop
        run: |
          cd btop
          make
          cp bin/btop ../btop-${{ matrix.arch }}
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Package DEB
        run: |
          version=$(./btop-${{ matrix.arch }} --version | awk '{print $2}')
          mkdir -p pkgroot/usr/bin
          cp ./btop-${{ matrix.arch }} pkgroot/usr/bin/btop
          fpm -s dir -t deb -n btop -v "$version" --architecture ${{ matrix.arch }} \
            --description "Resource monitor that shows usage and stats for processor, memory, disks, network and processes." \
            --maintainer "Your Name <you@example.com>" \
            -C pkgroot .
          mv *.deb btop-${{ matrix.arch }}.deb

      - name: Upload DEB package
        uses: actions/upload-artifact@v4
        with:
          name: btop-deb-${{ matrix.arch }}
          path: btop-${{ matrix.arch }}.deb

  build-rpm:
    name: Build RPM (${{ matrix.arch }})
    runs-on: [ubuntu-latest, fedora]
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fetch latest upstream release tag
        id: get_latest
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/aristocratos/btop/releases/latest | jq -r .tag_name)
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Check last built version
        id: check_version
        run: |
          if [ -f .last_built_btop_version ]; then
            last_built=$(cat .last_built_btop_version)
          else
            last_built="none"
          fi
          echo "last_built=$last_built" >> $GITHUB_OUTPUT
          if [ "$last_built" = "${{ steps.get_latest.outputs.latest_tag }}" ]; then
            echo "No new release. Exiting."
            exit 78
          fi

      - name: Set up dependencies
        run: |
          sudo dnf install -y ruby ruby-devel gcc gcc-c++ make cmake ncurses-devel rpm-build jq curl rubygems
          sudo gem install --no-document fpm

      - name: Download and extract btop source
        run: |
          curl -L "https://github.com/aristocratos/btop/archive/${{ steps.get_latest.outputs.latest_tag }}.tar.gz" -o btop.tar.gz
          tar -xzf btop.tar.gz
          mv btop-* btop

      - name: Build btop
        run: |
          cd btop
          make
          cp bin/btop ../btop-${{ matrix.arch }}
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Package RPM
        run: |
          version=$(./btop-${{ matrix.arch }} --version | awk '{print $2}')
          mkdir -p pkgroot/usr/bin
          cp ./btop-${{ matrix.arch }} pkgroot/usr/bin/btop
          fpm -s dir -t rpm -n btop -v "$version" --architecture ${{ matrix.arch }} \
            --description "Resource monitor that shows usage and stats for processor, memory, disks, network and processes." \
            --maintainer "Your Name <you@example.com>" \
            -C pkgroot .
          mv *.rpm btop-${{ matrix.arch }}.rpm

      - name: Upload RPM package
        uses: actions/upload-artifact@v4
        with:
          name: btop-rpm-${{ matrix.arch }}
          path: btop-${{ matrix.arch }}.rpm

      - name: Update last built version file
        run: |
          echo "${{ steps.get_latest.outputs.latest_tag }}" > .last_built_btop_version
        if: ${{ success() }}
